'use client';

import React, { useState } from 'react';
import HeaderBar from '@/app/view/components/HeaderBar';
import Sidebar from '../SideBarComponent/SideBar';
import { UploadCloud } from 'lucide-react';

export default function ClassificationSinglePage() {
  const [fileSelected, setFileSelected] = useState<File | null>(null);
  const [resultsGenerated, setResultsGenerated] = useState(false);

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files?.[0]) setFileSelected(e.target.files[0]);
  };

  const handleGenerateResults = () => {
    // TODO: envoyer le fichier au backend, récupérer métriques
    console.log('Generating model results...');
    setResultsGenerated(true);
  };

  const handleValidate = () => {
    // TODO: appeler l'API pour valider et écraser l'ancien modèle
    console.log('Validating new model version...');
  };

  return (
    <div className="flex bg-gray-50 min-h-screen">
      {/* Sidebar */}
      <Sidebar />

      {/* Contenu principal, sans défilement en étapes */}
      <div className="flex flex-col flex-1">
        <HeaderBar />

        <h1 className="text-2xl font-semibold text-center mt-4">
          Mise à jour du modèle IA
        </h1>

        <main className="p-6 flex-1 w-full max-w-6xl mx-auto space-y-8">
          {/* Section Import */}
          <section className="w-full bg-white rounded-lg shadow p-6 space-y-6">
            <div className="w-full border-2 border-dashed border-gray-300 rounded-lg p-10 flex flex-col items-center">
              <UploadCloud size={32} className="text-gray-400 mb-4" />
              <h3 className="text-lg font-medium mb-2">
                Importer une classification personnalisée
              </h3>
              <p className="text-sm text-gray-500 mb-4">
                Formats acceptés : .CSV, .XLSX
              </p>
              <input
                type="file"
                accept=".csv,.xlsx"
                onChange={handleFileChange}
                className="mb-4"
              />
              <button
                onClick={handleGenerateResults}
                disabled={!fileSelected}
                className={`px-6 py-2 rounded-lg text-white ${
                  fileSelected
                    ? 'bg-red-600 hover:bg-red-700'
                    : 'bg-gray-400 cursor-not-allowed'
                }`}
              >
                Générer résultats du modèle
              </button>
            </div>
          </section>

          {/* Section Validate */}
          <section className="w-full bg-white rounded-lg shadow p-6 flex justify-end">
            <button
              onClick={handleValidate}
              disabled={!resultsGenerated}
              className={`px-6 py-2 rounded-lg text-white ${
                resultsGenerated
                  ? 'bg-green-600 hover:bg-green-700'
                  : 'bg-gray-400 cursor-not-allowed'
              }`}
            >
              Valider
            </button>
          </section>
        </main>
      </div>
    </div>
  );
}

